{"tagline":"A way to start using RedBean PHP ORM","name":"BeanBase","google":"","body":"# BeanBase\r\n\r\nThe one purpose of creating BeanBase is to make [RedBeanPHP: Powerful ORM](http://redbeanphp.com/) even easier to use...[Skip to wiki (API docs and manual)](https://github.com/ruli/BeanBase/wiki)\r\n\r\nA slight taste with a use case:\r\n> The developer should be able to programmatically store a job entry into the database, given the job information (title, description), without touching a line of SQL.\r\n\r\n### With RBB:\r\n\r\n```php\r\n$data['title'] = $_POST['title'];\r\n$data['description'] = $_POST['description'];\r\n\r\n$bean = RBB::create( 'job', $data );\r\n\r\n$bean_id = R::store( $bean ); // Use vanilla RedBeanPHP to store the bean\r\n```\r\n\r\n### Now with BaseModel:\r\n\r\n```php\r\nclass JobModel extends BaseModel {\r\n  public $type = \"job\";\r\n}\r\n\r\n$data['title'] = $_POST['title'];\r\n$data['description'] = $_POST['description'];\r\n\r\n$job = new JobModel();\r\n$bean = $job->post( $data );\r\n```\r\n\r\nReady? [Dive in!](https://github.com/ruli/BeanBase/wiki)","note":"Don't delete this file! It's used internally to help with page regeneration."}